/**
 * Initialize FavoriteManager when page loads
 */
$(document).ready(function() {
    // Initialize favorite manager if it exists
    if (typeof FavoriteManager !== 'undefined') {
        window.favoriteManager = new FavoriteManager();
        console.log('‚úÖ FavoriteManager initialized');
    } else {
        console.warn('‚ö†Ô∏è FavoriteManager not found');
    }
    
    // Setup page-specific functionality for favorites page
    if (window.location.pathname.includes('/favorite') || window.location.pathname.includes('/favorites')) {
        console.log('üìç On favorites page, setting up specific functionality');
        
        // Add confirmation dialog for remove favorite buttons
        // L∆∞u √Ω: KH√îNG bind s·ª± ki·ªán .remove-favorite ·ªü favorites.js ƒë·ªÉ tr√°nh double event!
        $('.remove-favorite').on('click', function(e) {
            e.preventDefault();
            
            const button = $(this);
            const productId = button.data('product-id');
            const shopItem = button.closest('.col-sm-6, .col-md-4, .col-lg-3, [class*="col-"]');
            const productName = shopItem.find('.shop-item-title a').text().trim();
            
            // Show confirmation dialog
            if (typeof Swal !== 'undefined') {
                Swal.fire({
                    title: 'X√°c nh·∫≠n x√≥a',
                    text: `B·∫°n c√≥ ch·∫Øc mu·ªën b·ªè "${productName}" kh·ªèi danh s√°ch y√™u th√≠ch?`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#e74c3c',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'C√≥, x√≥a ngay',
                    cancelButtonText: 'H·ªßy',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Use the favorite manager to handle removal
                        if (window.favoriteManager) {
                            window.favoriteManager.removeFromFavorite(button[0]);
                        }
                    }
                });
            } else {
                if (confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën b·ªè "${productName}" kh·ªèi danh s√°ch y√™u th√≠ch?`)) {
                    // Use the favorite manager to handle removal
                    if (window.favoriteManager) {
                        window.favoriteManager.removeFromFavorite(button[0]);
                    }
                }
            }
        });
        
        // Add auto-reload preference toggle
        const autoReloadToggle = `
            <div class="auto-reload-toggle" style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;">
                <button class="btn btn-sm btn-outline-secondary" id="toggleAutoReload" title="B·∫≠t/t·∫Øt t·ª± ƒë·ªông t·∫£i l·∫°i trang">
                    <i class="fa fa-refresh"></i>
                    <span id="autoReloadStatus">T·∫Øt</span>
                </button>
            </div>
        `;
        
        $('body').append(autoReloadToggle);
        
        // Update auto-reload status
        function updateAutoReloadStatus() {
            const isEnabled = localStorage.getItem('favorite_auto_reload') === 'true';
            $('#autoReloadStatus').text(isEnabled ? 'B·∫≠t' : 'T·∫Øt');
            $('#toggleAutoReload').toggleClass('btn-success', isEnabled).toggleClass('btn-outline-secondary', !isEnabled);
        }
        
        updateAutoReloadStatus();
        
        // Toggle auto-reload
        $('#toggleAutoReload').on('click', function() {
            const currentState = localStorage.getItem('favorite_auto_reload') === 'true';
            localStorage.setItem('favorite_auto_reload', (!currentState).toString());
            updateAutoReloadStatus();
            
            const message = !currentState ? 'ƒê√£ b·∫≠t t·ª± ƒë·ªông t·∫£i l·∫°i trang' : 'ƒê√£ t·∫Øt t·ª± ƒë·ªông t·∫£i l·∫°i trang';
            if (window.favoriteManager) {
                window.favoriteManager.showInfo(message);
            }
        });
    }
}); 